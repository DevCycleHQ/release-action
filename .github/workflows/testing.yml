name: Test Release Action
on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: "Prerelease"
        required: true
        type: boolean
      draft:
        description: "Draft"
        required: true
        type: boolean
      version-increment-type:
          description: 'Which part of the version to increment:'
          required: true
          type: choice
          options:
            - major
            - minor
            - patch
          default: 'patch'
jobs:
 release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTOMATION_USER_TOKEN }}
          fetch-depth: 0

      - uses: ./prepare-release
        id: prepare-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ github.event.inputs.prerelease }}
          draft: ${{ github.event.inputs.draft }}
          version-increment-type: ${{ github.event.inputs.version-increment-type }}

      - name: Update version in code
        run: |
          echo '${{steps.prepare-release.outputs.next-release-tag}}' > VERSION.txt

      - name: Commit version change
        run: |
          git config --global user.email "foundation-admin@devcycle.com"
          git config --global user.name "DevCycle Automation"
          git add ./VERSION.txt
          git commit -m "Release v${{steps.prepare-release.outputs.next-release-tag}}"
          cat VERSION.txt

      - name: Push version change
        run: |
          git push origin HEAD:main
        if: inputs.draft != true

      - uses: ./create-release
        id: create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.prepare-release.outputs.next-release-tag }}
          target: main
          prerelease: ${{ github.event.inputs.prerelease }}
          draft: ${{ github.event.inputs.draft }}
          changelog: ${{ steps.prepare-release.outputs.changelog }}
          files: |
            VERSION.txt

      - name: Show results
        run: |
          echo "::notice title=Release ID::${{ steps.create-release.outputs.release-id }}"
          echo "::notice title=Release URL::${{ steps.create-release.outputs.release-url }}"