name: 'Prepare GitHub Release'
description: 'Determine the new version number, tag name, and changelog for a GitHub release'
inputs:
  github-token:
    description: 'GitHub Token'
    required: true
  prerelease:
    description: "Release should be marked as a prerelease"
    required: false
  draft:
    description: "Release should be marked as a draft"
    required: false
  version-increment-type:
    description: "Which part of the version to bump: major, minor, or patch"
    required: true
    default: patch
runs:
  using: "composite"
  steps:
    - name: Get latest non-prerelease release
      id: latestrelease
      uses: cardinalby/git-get-release-action@v1
      with:
        latest: true
        prerelease: false
        draft: false
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
    - name: Get next versions
      id: semverbump
      uses: WyriHaximus/github-action-next-semvers@v1.2.1
      with:
        version: ${{ steps.latestrelease.outputs.tag_name }}
    - name: Determine tag name for release
      id: tag
      shell: bash
      run: |
        case "${{ inputs.version-increment-type }}" in
          major)
            echo "::notice title=Version::Incrementing major version"
            TAG="${{ steps.semverbump.outputs.major }}"
            ;;
          minor)
            echo "::notice title=Version::Incrementing minor version"
            TAG="${{ steps.semverbump.outputs.minor }}"
            ;;
          patch)
            echo "::notice title=Version::Incrementing patch version"
            TAG="${{ steps.semverbump.outputs.patch }}"
            ;;
          *)
            echo "::error title=Unknown::Unknown value for version-increment-type, exiting"
            exit 1
            ;;
        esac
        if [[ "${{ inputs.prerelease }}" == "true" ]]; then
          echo "::warning title=Prerelease::Prerelease is enabled, adding prerelease suffix"
          TAG="${TAG}-prerelease${{ github.run_number }}"
        fi
        if [[ "${{ inputs.draft }}" == "true" ]]; then
          DRAFT="(draft)"
        else
          DRAFT=""
        fi
        echo "::notice title=Tag::Tag for release: ${TAG} ${DRAFT}"
        echo "tag=$TAG" >> "$GITHUB_OUTPUT"
    - name: Build Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3.7.2
      with:
        # explicitly specify the tag range to use to avoid inconsistency in the changelog
        fromTag: ${{ steps.latestrelease.outputs.tag_name }}
        toTag: main
        configurationJson: |
          {
            "template": "#{{CHANGELOG}}\n\n## Uncategorized\n\n#{{UNCATEGORIZED}}",
            "pr_template": "- #{{TITLE}} by @#{{AUTHOR}} in ##{{NUMBER}}",
            "categories": [
              {
                "title": "## Features",
                "rules": [{"pattern": "^(feature|feat):", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Bug Fixes",
                "rules": [{"pattern": "^fix:", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Build System / CI",
                "rules": [{"pattern": "^(build|ci):", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Documentation",
                "rules": [{"pattern": "^docs:", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Refactors",
                "rules": [{"pattern": "^refactor:", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Performance Improvements",
                "rules": [{"pattern": "^(perf|performance):", "flags": "ui", "on_property": "title"}]
              },
              {
                "title": "## Testing",
                "rules": [{"pattern": "^(test|testing):", "flags": "ui", "on_property": "title"}]
              }
            ]
          }
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
outputs:
  previous-release-tag:
    description: 'Latest tag prior to running this action'
    value: ${{ steps.latestrelease.outputs.tag_name }}
  next-release-tag:
    description: 'Tag used for the release (without "v" prefix)'
    value: ${{ steps.tag.outputs.tag }}
  changelog:
    description: 'Changelog for the release'
    value: ${{ steps.changelog.outputs.changelog }}